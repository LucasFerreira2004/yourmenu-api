version: "3.8"

services:
  yourmenu:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - postgres
      - pgadmin
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/actuator/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
    ports:
      - "8080:8080"
    networks:
      - yourmenu-net
    restart: unless-stopped

  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - yourmenu-net
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:80 || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
    volumes:
      - pgadmindata:/var/lib/pgadmin/data
    ports:
      - "5050:80"
    networks:
      - yourmenu-net
    restart: unless-stopped

volumes:
  pgdata:
  pgadmindata:

networks:
  yourmenu-net:
    driver: bridge
