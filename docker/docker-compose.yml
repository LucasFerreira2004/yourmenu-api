version: "3.8"

services:
  postgres:
    image: postgres:14-alpine
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - yourmenu-net
    restart: unless-stopped
    profiles: ["dev", "staging"]

  pgadmin:
    image: dpage/pgadmin4:latest
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:80 || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
    volumes:
      - pgadmindata:/var/lib/pgadmin/data
    ports:
      - "5050:80"
    networks:
      - yourmenu-net
    restart: unless-stopped
    profiles: ["dev", "staging"]

  yourmenu:
    build:
      context: .
      dockerfile: docker/Dockerfile
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      pgadmin:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/actuator/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
    ports:
      - "8080:8080"
    networks:
      - yourmenu-net
    restart: unless-stopped
    profiles: ["staging"]

volumes:
  pgdata:
  pgadmindata:

networks:
  yourmenu-net:
    driver: bridge
